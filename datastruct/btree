m阶B树满足的条件:
	1.树中每个节点最多含有m个孩子(m>=2)
	2.除根节点和叶子节点外,其他每个节点至少有[ceil(m/2)]个孩子,其中ceil(x)是一个取上限的函数
	3.若根节点不是叶子节点,则至少含有两个孩子
	4.所有叶子节点出现在同一层(B树的叶节点可以看成一种外部节点,不包含任何信息,相当于只存储了数据没有指向子节点的指针)
	5.每个非终端节点中包含有n个关键字信息:(n,P0,K1,P1,K2,P2,...,Kn,Pn),其中:
		a) Ki(i=1...n)为关键字,且关键字按顺序升序排序
		b) Pi为指向子树根的节点,且指针P(i-1)指向的子树中所有节点的关键字均小于Ki,但都大于K(i-1)
		c) 关键字的个数n必须满足:[ceil(m/2)-1]<=n<=m-1
	6.有j个孩子的非叶节点恰好有j-1个关键码

m阶B树的高度
	若B树某一非叶子节点包含N个关键字,则此非叶子节点含有N+1个孩子节点,而所有的叶子节点都出现在第I层,我们可以得出:
		a) 因为根至少含有两个孩子,因此第二层至少有两个节点
		b) 除跟和叶子外,其他节点至少有ceil(m/2)个孩子
		c) 因此第三层至少有2*ceil(m/2)个节点
		d) 在第四层至少有2*(ceil(m/2)^2)个节点
		e) 在第I层至少有2*(ceil(m/2)^(I-2))个节点,于是有: N+1 >= 2*(ceil(m/2)^(I-2))
		f) 考虑到第L层的节点个数为N+1,那么2×(ceil(m/2)^(I-2)) <= N+1,也就是L层的最少节点个数刚好达到N+1个,即 I<=log (ceil(m/2)) ((N+1)/2+2)
		g) 所以当B树包含N个关键字时,B树的最大高度为I-1,(计算B树高度时,叶节点所在层不计算在内)
		
