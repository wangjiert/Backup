1.docker的核心是一个被称作Docker引擎的基于单主机运行的守护进程,通过这个守护进程来创建和管理容器
2.docker命令:
	sudo docker --version	查看版本
	sudo service docker restart	重启docker
	sudo gpasswd -a <user> docker	添加用户到docker组
	docker	显示帮助信息
	docker ps	列出所有运行中的容器,-a选项可以查看停止的容器
	docker run 镜像名 shell命令 启动容器并在容器中执行shell
	docker rm 容器id	永久删除容器
	docker images	输出镜像信息
	docker rmi 镜像名	删除镜像
3.交互式启动docker
	docker run -t -i 镜像名 /bin/bash	获得一个终端会话
4.后台运行docker
	docker run -d shell命令
5.端口映射
	使用-p 容器端口:宿主机端口 选项能够进行端口映射
6.run与exec
	run会创建新的容器并运行命令
	语法:docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
	exec在运行的容器中执行命令
	语法:docker exec [OPTIONS] CONTAINER COMMAND [ARG...]
7.创建\启动\停止\移除容器
	create start stop kill rm restart
8.删除所有容器
	docker rm $(docker ps -a -q)	-q选项只会返回容器ID信息
9.使用Dockerfile构建Docker镜像
	Dockerfile是一个文本文件,记录了构建一个镜像需要的过程,包括安装软件包,创建文件夹,定义环境变量以及其他一些操作
	使用docker build构建新的镜像
10.链接容器
	通过--name选项为容器设置名称
	通过-d选项以守护式的方式开始运行
	如果使用镜像没有指定标签,docker会自动使用latest标签
	通过选项--link链接到其他容器,docker会自动进行网络配置,让一个容器能访问到另一个容器暴露出来的端口
11.备份在容器中运行的数据库
	a.在一个以后台方式运行的容器中执行一条命令
	b.挂载一个宿主机卷到容器中
12.宿主机和容器之间共享数据
	运行docker run命令时,通过设置-v选项讲宿主机的卷挂载到容器中
	默认以读写模式挂载数据卷,可以在卷名称后通过冒号设置相应的权限
	通过docker inspect命令来查看数据卷的挂载映射情况
13.容器之间共享数据
	-v选项中省略了宿主机的路径,那么就创建了一个称为数据容器的容器,容器启动后,会在内部创建参数指定的卷,这是一个具备读写权限的文件系统,它不在容器镜像最顶层的只读层之上,docker负责管理这个文件系统,但宿主机也可以对其进行读写.这个数据卷实际上保持在宿主机上.
	为了将这个容器中的卷共享给其他容器,可以使用--volumes-from选项,即使这个容器没有运行
	通过docker rm -v 容器名 命令来删除容器和它的卷
14.对容器进行数据复制
	使用docker cp命令将文件从正在运行的容器复制到docker主机,反之亦然

